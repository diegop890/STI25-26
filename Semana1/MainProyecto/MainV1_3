/* Descripción: Hacer semáforo con timer
 * Autor: Diego Piñero Beltrán
 * Empresa: IES Jaroso
 * Fecha de creación: 10/10/2025
 * Fecha de actualización: 09/10/2025
 */

#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"
#include "esp_timer.h"
#include "esp_log.h"

//Constantes
#define PinLedRojo 32
#define PinLedAmarillo 33
#define PinLedVerde 25

#define MaskPinesLeds (1ULL<<PinLedRojo) | (1ULL<<PinLedAmarillo) | (1ULL<<PinLedVerde)

//Declaración de variables globales
int accion = 1;

//Declaración de funciones callback
void isrTimerSemaforo(void *);

//Handles
esp_timer_handle_t h_timerSemaforo;

void app_main(void)
{
    int pinesSemaforo [3] = {PinLedVerde, PinLedAmarillo, PinLedRojo};
    int tiempos [3] = {4000000, 1000000, 5000000};

    gpio_config_t configPinesLeds = {
        .pin_bit_mask = MaskPinesLeds,
        .mode = GPIO_MODE_INPUT_OUTPUT,
        .pull_up_en = GPIO_PULLUP_DISABLE,
        .pull_down_en = GPIO_PULLDOWN_DISABLE,
        .intr_type = GPIO_INTR_DISABLE
    };
   
    gpio_config(&configPinesLeds);
   
    //Poner todos los leds a 0
    gpio_set_level(PinLedRojo, 0);
    gpio_set_level(PinLedAmarillo, 0);
    gpio_set_level(PinLedVerde, 0);

    //Configuración y creación del timer del semáforo
    esp_timer_create_args_t configTimerSemaforo = {
        .callback = isrTimerSemaforo
    };

    esp_timer_create(&configTimerSemaforo, &h_timerSemaforo);

    int accionSig = 1;
    accion = 1;

    //Apagar el semáforo
    int i= 0;

    for (int i = 0; i < 3; i = i++)
    {
        gpio_set_level(pinesSemaforo [i], 0);
    }

    //while de la acción del semáforo
    while(1)
    {
        //Apagar el semáforo
        if (accion == )
        {
            for (int i = 0; i < 3; i = i++)
            {
                gpio_set_level(pinesSemaforo [i], 0);
            }
            
            gpio_set_level(pinesSemaforo [accion - 1], 1);
            esp_timer_start_once(h_timerSemaforo, tiempos [accion - 1]);
        }
    }


}

void isrTimerSemaforo(void * args)
{
    if (accion > 0 && accion < 3)
    {
        accion++;
    }
    else
    {
        accion = 1;
    }
}
